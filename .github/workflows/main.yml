name: CI/CD Pipeline for Sales Microservice

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/sales-microservice:${{ github.sha }}
  DOCKERFILE_PATH: ./sales/Dockerfile

jobs:
  build-and-deploy:
    name: Build, Analyze and Deploy
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./sales

    steps:
      # Checkout code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up JDK
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      # Cache dependencies
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2

      # SonarCloud analysis
      - name: SonarCloud Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.projectKey=Carlos-Camacho2003_sales-microservice \
            -Dsonar.organization=carlos-camacho2003 \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=$SONAR_TOKEN

      # Docker setup and build
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          docker buildx build \
            --tag $IMAGE_NAME \
            --file $DOCKERFILE_PATH \
            --load \
            .

      # Push images
      - name: Push versioned image
        run: docker push $IMAGE_NAME

      - name: Tag and push as latest
        run: |
          docker tag $IMAGE_NAME ${{ secrets.DOCKER_USERNAME }}/sales-microservice:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/sales-microservice:latest
